#ifdef GL_ES
precision mediump float;
#endif

const float MAX_OFFSET = 80.0;

float rand(float co) { return fract(sin(co*(91.3458)) * 47453.5453); }

using namespace std;

void main(in std::Texture2d myTex,out vec4 Color  ) 
{
    vec2 fragCoord = fragment(floor(std::getRenderTargetSize() * std::getVertexTexCoord()));
    
    vec2 uv = fragCoord.xy / getRenderTargetSize().xy;
    vec2 texel = 1. / getRenderTargetSize().xy;
    
    vec4 img = myTex.sample(uv);
    
    // you can try and comment / uncomment these three lines
    float step_y = texel.y*(rand(uv.x)*MAX_OFFSET) * (sin(sin(getTime()*0.5))*2.0+1.3);	// modulate offset
    //float step_y = texel.y*(rand(uv.x)*100.);										// offset without modulation
    step_y += rand(uv.x*uv.y*getTime())*0.025*sin(getTime());								// shake offset and modulate it
    step_y = mix(step_y, step_y*rand(uv.x*getTime())*0.5, sin(getTime())); 					// more noisy spikes
    
    if ( dot(img,  vec4(0.299, 0.587, 0.114, 0.) ) > 1.2*(sin(getTime())*0.325+0.50)){
    	uv.y+=step_y;
    } else{
    	uv.y-=step_y;
    }
    
    img = myTex.sample(uv);
    Color = img;

}